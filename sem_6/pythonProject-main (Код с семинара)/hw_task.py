"""Задание 1. Создайте программу на Python или Java, которая принимает два списка чисел
и выполняет следующие действия:
a. Рассчитывает среднее значение каждого списка.
b. Сравнивает эти средние значения и выводит соответствующее сообщение:
- ""Первый список имеет большее среднее значение"", если среднее значение первого списка больше.
- ""Второй список имеет большее среднее значение"", если среднее значение второго списка больше.
- ""Средние значения равны"", если средние значения списков равны.

Важно: Приложение должно быть написано в соответствии с принципами
объектно-ориентированного программирования.
Используйте Pytest (для Python) или JUnit (для Java) для написания тестов,
которые проверяют правильность работы
программы. Тесты должны учитывать различные сценарии использования вашего приложения.
Используйте pylint (для
Python) или Checkstyle (для Java) для проверки качества кода.
Сгенерируйте отчет о покрытии кода тестами. Ваша цель - достичь минимум 90% покрытия."""


def list_comparasion(list1: list[int], list2: list[int]) -> str:
    """Сравнивает два списка чисел и выводит соответствующее сообщение"""
    if len(list1) == 0 and len(list2) == 0:
        return "Первый и второй список пусты"
    if len(list1) == 0:
        return "Первый список пуст"
    if len(list2) == 0:
        return "Второй список пуст"
    list1_average = sum(list1) / len(list1)
    list2_average = sum(list2) / len(list2)
    if list1_average > list2_average:
        return "Первый список имеет большее среднее значение"
    if list2_average > list1_average:
        return "Второй список имеет большее среднее значение"
    return "Средние значения равны"

# pylint -------------------------------------------------------------------
# Your code has been rated at 10.00/10 (previous run: 9.29/10, +0.71)

# Coverage ----------------------------------------------------------------
# 100.00% of statements covered.

# Обьяснение ----------------------------------------------------------------
# Тестами покрыты все возможные сценарии использования приложения. Потому что их немного. Исключений быть не должно,
# т.к. указаны принимаемые и возвращаемые типы данных.